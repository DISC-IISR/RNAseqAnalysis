% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countT.R
\name{countT}
\alias{countT}
\title{generate Count Table}
\usage{
countT(sysma, mytargets, type = "SYSargs", file, format = c("auto", "gff3",
  "gtf"), dataSource = NA, organism = NA, taxonomyId = NA,
  circ_seqs = DEFAULT_CIRC_SEQS, chrominfo = NULL, miRBaseBuild = NA,
  metadata = NULL, dbxrefTag, filter, con)
}
\arguments{
\item{sysma}{path to 'param' file; file structure follows a simple name/value syntax that converted into JSON format; for details about the file structure see sample files provided by package. Assign NULL to run the pipeline without 'param' file. This can be useful for running partial workflows, e.g. with pregenerated BAM files.}

\item{mytargets}{path to targets file}

\item{type}{type="SYSargs" returns SYSargs, type="json" returns param file content in JSON format (requires rjson library)}

\item{file}{Input GFF3 or GTF file. Can be a path to a file, or an URL, or a connection object, or a GFF3File or GTFFile object.}

\item{format}{Format of the input file. Accepted values are: "auto" (the default) for auto-detection of the format, "gff3", or "gtf". Use "gff3" or "gtf" only if auto-detection failed.}

\item{dataSource}{A single string describing the origin of the data file. Please be as specific as possible.}

\item{organism}{What is the Genus and species of this organism. Please use proper scientific nomenclature for example: "Homo sapiens" or "Canis familiaris" and not "human" or "my fuzzy buddy". If properly written, this information may be used by the software to help you out later.}

\item{taxonomyId}{By default this value is NA and the organism provided will be used to look up the correct value for this. But you can use this argument to override that and supply your own taxonomy id here (which will be separately validated). Since providing a valid taxonomy id will not require us to look up one based on your organism: this is one way that you can loosen the restrictions about what is and isn't a valid value for the organism.}

\item{circ_seqs}{A character vector to list out which chromosomes should be marked as circular.}

\item{chrominfo}{Data frame containing information about the chromosomes. Will be passed to the internal call to makeTxDb. See ?makeTxDb for more information. Alternatively, can be a Seqinfo object.}

\item{miRBaseBuild}{Specify the string for the appropriate build Information from mirbase.db to use for microRNAs. This can be learned by calling supportedMiRBaseBuildValues. By default, this value will be set to NA, which will inactivate the microRNAs accessor.}

\item{metadata}{A 2-column data frame containing meta information to be included in the TxDb object. See ?makeTxDb for more information about the format of metadata.}

\item{dbxrefTag}{If not missing, the values in the Dbxref attribute with the specified tag (like “GeneID”) are used for the feature names.}

\item{filter}{Named vector with filter cutoffs of format c(Fold=2, FDR=1) where Fold refers to the fold change cutoff (unlogged) and FDR to the p-value cutoff.}

\item{con}{a formula which expresses how the counts for each gene depend on the variables in colData}
}
\description{
the function generates count table using the raw reads and genome sequence. it also provides with a overall differential expression analysis plot of the reads. The count table generated can be used for the downstream analysis using tools like \code{edgeR} and \code{DESeq}
}
\examples{

\dontrun{
library(BSgenome.Celegans.UCSC.ce11)
export(Celegans, "ce11.fasta", compress=FALSE)
library("biomartr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
getGFF(db = "ensembl", organism = "Caenorhabditis elegans", reference = TRUE, path = file.path("inst", "dataset"))
system("gunzip inst/dataset/Caenorhabditis_elegans.WBcel235.91_ensembl.gff3.gz")
condition <- factor(c("N1","N1","N2","N2","M1","M1","M2","M2","M3","M3","M4","M4","U1","U1"))
countT(sysma = "./param/tophat.param", mytargets = "targetsPE.txt", file="dataset/WG.gff3", filter=c(Fold=2, FDR=100),  con = condition)
}

}
\seealso{
\code{\link{systemArgs}}
}
